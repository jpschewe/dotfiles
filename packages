# Hey EMACS, this should be in -*- ksh -*- mode
#
# FILE		.paths
# OVERVIEW	setup bash/sh paths (PATH,MANPATH)
#

#
# Null out variables to be set, and export them.
PATH= ; export PATH
LD_LIBRARY_PATH= ; export LD_LIBRARY_PATH
LM_LICENSE_FILE= ; export LM_LICENSE_FILE
CLASSPATH= ; export CLASSPATH

### "Standard" OS PATH
append PATH 		/usr/bin

#append LD_LIBRARY_PATH	/usr/lib
append PATH /bin

### Backwards compatible
case $OSTYPE in
  linux)
         append PATH /usr/local/bin
         append PATH /opt/kde3/bin
         append PATH /opt/gnome/bin
         append PATH /usr/games
         append PATH /usr/bin/X11
         ;;
esac

### Standard OS Networking
case $OSTYPE in
  solaris2*) append PATH /usr/sbin
	    append PATH /usr/dt/bin
	    append PATH /opt/SUNWdtpcv/bin
	    #append LD_LIBRARY_PATH /opt/SUNWdtpcv/lib
	    ;;
  *)        append PATH /usr/etc;;
esac

case $OSTYPE in
  sunos4 | solaris2*) append PATH /etc;;
esac

### BSD Compatability
case $OSTYPE in
  sunos4 | solaris2*) prepend PATH /usr/ucb;;
esac

#-----------------------------------------------------------------------------
### X Windows
case $OSTYPE in
  sunos4) X11HOME=/usr/local/X11R5 
          append PATH	${X11HOME}/local
          append PATH /net/packages/X11/X11R6.1/install/sparc-sun-sunos4.1.4/bin
          ;;
  cygwin) X11HOME=/usr/X11R6 
          append PATH ${X11HOME}/bin
          ;;
  solaris2* | sunos4)
                      X11HOME=/net/packages/X11/X11R6.1/install/sparc-sun-solaris2.5
                      ;;
  linux) X11HOME=/usr/X11R6;;
esac

if [ \! $OSTYPE = "cygwin" ]; then
  append PATH 		${X11HOME}/bin
  #append LD_LIBRARY_PATH	${X11HOME}/lib
  export X11INC_DIR=${X11HOME}/include
  export X11LIB_DIR=${X11HOME}/lib
fi

### OS Native X/OpenWindows
case $OSTYPE in
  hpux9 | hpux10)    append PATH /usr/bin/X11;;
  irix5 | irix6)     append PATH /usr/bin/X11;;
  sunos4 | solaris2*) export OPENWINHOME=/usr/openwin
		     append PATH 		${OPENWINHOME}/bin
		     #append LD_LIBRARY_PATH	${OPENWINHOME}/lib
		     #append HELPPATH		${OPENWINHOME}/lib/help
		     ##export HELPPATH
		     ;;
esac 

#-----------------------------------------------------------------------------

case $OSTYPE in
  solaris*)
            ### psutils
            append PATH /net/packages/psutils/1.16/install/sparc-sun-solaris2.5/bin

            ### Ispell
            append PATH /net/packages/ispell/3.1.20/install/sparc-sun-solaris2.5/bin

            ### GNU misc
            #GNU_MISC_DIR=/net/packages/gnu-misc/1999-April/install/sparc-sun-solaris2.6
            #prepend PATH ${GNU_MISC_DIR}/bin
            ## GNU gcc
            ##export GCC_PATH=/net/packages/gnu-gcc/2.8.0/solaris2.5.1/
            #case `uname -r` in
            #  5.8)
            #       export GCC_PATH=/net/packages/gnu-gcc/2006-January/install/sparc-sun-solaris2.6
            #       ;;
            #  *)
            #     export GCC_PATH=/net/packages/gnu-gcc/2006-January/install/sparc-sun-solaris2.6
            #     ;;
            #esac
            #prepend PATH		${GCC_PATH}/bin
            prepend PATH /net/packages/gnu/2006-February/install/sparc-sun-solaris2.6/bin

            ### GNU
            #GNU=/net/packages/gnu/2006-February/install/sparc-sun-solaris2.6
            #prepend PATH ${GNU}/bin
            
            ### PERL
            case `uname -r` in
              5.6)
                   prepend PATH /net/packages/perl/builds/5.004/sparc-sun-solaris2.5.1/bin
                   ;;
              *)
                 if [ ! -x /usr/bin/perl ]; then
                   prepend PATH /net/packages/perl/builds/5.005/sparc-sun-solaris2.6/bin
                 fi
                 ;;
            esac

            ### tcl-tk
            append PATH /net/packages/tcl-tk/8.0.5/solaris2.6/bin
            TCL_LIBRARY=/net/packages/tcl-tk/8.0.5/solaris2.6/lib/tcl8.0
            TK_LIBRARY=/net/packages/tcl-tk/8.0.5/solaris2.6/lib/tk8.0
            export TCL_LIBRARY TK_LIBRARY

            ### SPI
            #export SPI_DIR=/net/projects/spi/developers/jschewe/DiagDisp/
            #append PATH ${SPI_DIR}/bin/sun4
            #append MANPATH ${SPI_DIR}/man
            ;;
esac

# Standard OS Compiler
case $OSTYPE in
  solaris2*)
             prepend PATH /net/packages/suncompilers/studiocc_11_sparc/SUNWspro/bin
             prepend PATH /usr/ccs/bin
             append PATH /net/packages/usr-local/flexlm/licenses
             export LM_LICENSE_FILE=5280@gyro:5280@axis:5280@servo
             #/usr/local/flexlm/licenses/license.dat
             ;;
esac 

### Procmail
case $OSTYPE in
  solaris2*) append PATH /net/packages/procmail/3.10/bin.solaris2*
            ;;
esac 

#------------------------------------------------------------------------------
# TeX
addpkg_tex() {
  append PATH /net/packages/tex/teTex-0.4p13/install/sparc-sun-solaris2.5/bin
}

### netcat
case $OSTYPE in
  cygwin) append PATH /cygdrive/c/packages/netcat
esac

### samba
#case $OSTYPE in
#  solaris2*) append PATH /net/packages/samba/1.9.18p7/install/sparc-sun-solaris2*.5/bin;;
#esac

### lynx
#case $OSTYPE in
#  solaris2*) 
#	 append PATH /net/packages/lynx/sparc-sun-solaris2*.5/bin
#  ;;
#esac

### Sicstus
#case $OSTYPE in
#  solaris2*)
#    export SICSHOME=/net/packages/prolog/sicstus/sicstus3.8.5/bin
#    # for emacs
#    export EPROLOG sictus 
#    append PATH ${SICSHOME}
#    ;;
#  cygwin)
#          ### SICStus Prolog
#          append PATH /cygdrive/c/packages/SICStus_Prolog/bin
#          ;;
#esac

### daVinci
#case $OSTYPE in
#  solaris2*)
#    export DAVINCIHOME=/net/projects/d-circa/code/daVinci_V2.0
#    append PATH ${DAVINCIHOME}
#    ;;
#esac

### ical
#case $OSTYPE in
#  solaris2*)
#    append PATH /net/packages/ical/2.0p2/sparc-sun-solaris2*.5/bin
#    ;;
#  sunos4)
#    append PATH /net/packages/ical/2.0p2/sparc-sun-sunos4.1.4/bin
#    ;;
#esac

# Floating point comparison from http://lists.debian.org/debian-user/2000/09/msg04413.html
# returns 0 if $1 > $2
# returns 1 if $1 < $2
# returns 2 if $1 = $2
# returns 3
fpcmp() {
        local int_a=${1%.*}
        local dec_a=${1#*.}
        local int_b=${2%.*}
        local dec_b=${2#*.}

        [ $int_a -lt $int_b ] && return 0
        [ $int_b -lt $int_a ] && return 1
        [ $int_b -eq $int_a ] && {
                [ $dec_a -lt $dec_b ] && return 0 
                [ $dec_b -lt $dec_a ] && return 1 
                [ $dec_b -eq $dec_a ] && return 2
        }
        return 3
}

### ssh
case $OSTYPE in
  solaris* | sunos4)
                     prepend PATH /opt/OBSDssh/bin
                     ;;
esac

### cvs
CVSIGNORE=".cvsignore"
CVS_RSH="ssh"
export CVSIGNORE CVS_RSH
case $OSTYPE in
  cygwin)
          #prepend PATH /ProgramFiles/CVS\ for\ NT
          ;;
  solaris2*)
            #append PATH /net/packages/gnu-cm/1999-12/install/sparc-sun-solaris2*.6/bin
             ;;
esac

### subversion
case $OSTYPE in
  cygwin)
    append PATH /usr/lib/subversion/bin
    ;;
esac

#Xemacs
case $OSTYPE in
  cygwin)
    case $HOST in
      eggplant-laptop)
          prepend PATH "/cygdrive/c/packages/XEmacs/XEmacs-21.4.13/i586-pc-win32"
          ;;
    esac
      ;;
  solaris2* | sunos4)
     #prepend PATH /net/packages/xemacs/20.4/install/sparc-sun-solaris2.4/bin
     prepend PATH /net/packages/xemacs/21.1.3/install/bin/sparc-sun-solaris2.6/
     ;;
esac
# make sure XEmacs generates an error log
xemacs () {
  if [ ! -d ~/.xemacs ]; then
    mkdir -p ~/.xemacs
  fi
  
  if [ x"$DISPLAY" != x"" ]; then
    if [ -e ~/.xemacs/${HOST}-errors ]; then
      mv -f ~/.xemacs/${HOST}-errors ~/.xemacs/${HOST}-errors.old
    fi
    command xemacs $* > ~/.xemacs/${HOST}-errors 2>&1
  else
    command xemacs $*
  fi
}

# Matlab
addpkg_matlab() {
  case $LOCATION in
    htc)
         append PATH "/net/packages/matlab/6.5/bin"
         ;;
  esac
}

### java
unset JAVA_HOME
case $OSTYPE in
  cygwin)
          if [ -z "${JAVA_HOME}" ]; then
            for java_dir in \
             "c:/packages/jdk1.5.0_01" \
             "c:/packages/jdk-1.5.0_06" \
             "c:/packages/jdk-1.4.1_01" \
             "d:/packages/Sun-JDK-1.3.1"
            do
              if [ -z "${JAVA_HOME}" -a -e ${java_dir} ]; then
                JAVA_HOME=${java_dir}
              fi
            done
          fi
          if [ -n "${JAVA_HOME}" -a -e "${JAVA_HOME}" ]; then
            UJAVA_HOME="`cygpath -u ${JAVA_HOME}`"
            append PATH "${UJAVA_HOME}/bin"
            append PATH "${UJAVA_HOME}/jre/bin"
          fi
          ;;
  solaris2* | sunos4)
                      JAVA_HOME=/net/packages/java/jdk/1.5.0/solaris-sparc
                      prepend PATH "${JAVA_HOME}/bin"
                      ;;
  linux | linux-gnu)
                     for java_dir in \
                      /usr/java/jdk1.5.0_01 \
                      /usr/java/jdk1.5.0 \
                      /usr/java/j2sdk1.4.2_04 \
                      /usr/lib/jvm/java \
                      /usr/lib/java
                     do
                       if [ -z "${JAVA_HOME}" -a -e ${java_dir} ]; then
                         JAVA_HOME=${java_dir}
                       fi
                     done
                     if [ -z "${JAVA_HOME}" -a -x /usr/sbin/update-alternatives ]; then
                       java=`/usr/sbin/update-alternatives --display javac | grep best | awk '{print $NF}'`
                       if [ -n "${java}" ]; then
                         javadir=`dirname ${java}`/..
                         JAVA_HOME=`cd ${javadir} && pwd`
                       fi
                     fi
                     if [ -n "${JAVA_HOME}" -a -e "${JAVA_HOME}" ]; then
                       prepend PATH "${JAVA_HOME}/bin"
                     fi
                     ;;
esac
export JAVA_HOME
JDK_HOME=${JAVA_HOME}
export JDK_HOME

### unzip & Motif
#case $OSTYPE in
   #solaris2*) append LD_LIBRARY_PATH /usr/dt/lib;;
#esac

#source safe
SSUSER=jschewe
export SSUSER
case $OSTYPE in
  cygwin)
    case $LOCATION in
      htc)
        SSDIR=//mn65-fs1/projects/schedinfra/vss
        export SSDIR
        append PATH "/cygdrive/c/progra~1/micros~4/vss/win32"
        ;;
    esac
    ;;
  linux)
         SOSHOME="${HOME}/.sos"
         export SOSHOME
         ;;
  *)
     MWFONT_CACHE_DIR="${HOME}/windows/font-cache"
     export MW_FONT_CACHE_DIR
     ;;
esac

### ant
case $OSTYPE in
  cygwin)
          if [ -e c:/packages/ant ]; then
            ANT_HOME=c:/packages/ant
            U_ANT_HOME=`cygpath "${ANT_HOME}"`
          fi
          ;;
  linux)
         if [ -e /net/packages/java/ant/1.6.5/apache-ant-1.6.5 ]; then
           ANT_HOME=/net/packages/java/ant/1.6.5/apache-ant-1.6.5
         elif [ -e /usr/local/apache-ant-1.6.2 ]; then
           ANT_HOME=/usr/local/apache-ant-1.6.2
         elif [ -e /usr/share/ant ]; then
           ANT_HOME=/usr/share/ant
         elif [ -e /opt/jakarta/ant ]; then
           ANT_HOME=/opt/jakarta/ant
         fi
         U_ANT_HOME=${ANT_HOME}
         ;;
  *)
     if [ -e /net/packages/java/ant/1.6.5/apache-ant-1.6.5 ]; then
       ANT_HOME=/net/packages/java/ant/1.6.5/apache-ant-1.6.5
       U_ANT_HOME=${ANT_HOME}
     fi
     ;;
esac
if [ -n "${ANT_HOME}" ]; then
  export ANT_HOME
  export ANT_OPTS="-Xmx256M"
  prepend PATH ${U_ANT_HOME}/bin
fi

# Microsoft VisualStudio C/C++
#case $OSTYPE in
#  cygwin)
#          append PATH "c:/Program Files/Microsoft Visual Studio/VC98/Bin"
#          append PATH "c:/Program Files/Microsoft Visual Studio/VC98/Lib"
#          append PATH "c:/Program Files/Microsoft Visual Studio/Common/MSDev98/Bin"
#          export LIB=`cygpath -w "/ProgramFiles/Microsoft Visual Studio/VC98/Lib"`
#          export INCLUDE=`cygpath -w "/ProgramFiles/Microsoft Visual Studio/VC98/Include"`
#          ;;
#esac

## ipso
#case $OSTYPE in
#  cygwin)
#          append PATH "/cygdrive/h/projects/IPSO/Active-R1/com/honeywell/goalsetter/bpc"
#          append PATH "/cygdrive/h/projects/IPSO/Active-R1/com/honeywell/goalsetter/util/database"
#          append PATH "/cygdrive/h/projects/IPSO/Active-R1/com/honeywell/goalsetter/bpc/bpc_ellipsoid"
#          ;;
#esac

#enscript
case $OSTYPE in
  cygwin)
          append PATH "/cygdrive/c/packages/enscript"
          ;;
esac

#jad
case $OSTYPE in
  cygwin)
          append PATH "/cygdrive/c/Installs/jad"
          ;;
esac

# winnt system stuff
case $OSTYPE in
  cygwin)
          append PATH "/cygdrive/c/WINDOWS/system32"
          append PATH "/cygdrive/c/WINDOWS"
          append PATH "/cygdrive/c/packages/putty"
          append PATH "/cygdrive/c/Program Files/Resource Kit"
          ;;
esac

### ilog
case $LOCATION in
  htc)
    case $OSTYPE in
      cygwin)
        ILOG_HOME=//mn65fsna1/net/packages/ilog
        append PATH ${ILOG_HOME}/ilm/current/win32
        ;;
      solaris2*)
        ILOG_HOME=/net/packages/ilog
        append PATH ${ILOG_HOME}/ilm/current/unix
        ;;
      linux)
        ILOG_HOME=/net/packages/ilog
        alias cplex=${ILOG_HOME}/cplex/9.0.2/bin/x86_RHEL3.0_3.2/cplex
        ;;
    esac
    export ILOG_HOME;
    export ILOG_LICENSE_FILE=${ILOG_HOME}/ilm/access-barrier.ilm
    ;;
esac

### mysql
case $OSTYPE in
  cygwin) append PATH /cygdrive/c/packages/mysql/bin
          ;;
esac

### gimp
case $OSTYPE in
  cygwin)
          append PATH /cygdrive/c/packages/gimp/bin
          ;;
esac

### subversion
case $OSTYPE in
  cygwin)
          append PATH /usr/lib/subversion/bin
          ;;
esac

### VisualWorks 7.2
case $OSTYPE in
  linux)
    export VISUALWORKS=/usr/local/vw7.1nc
    append PATH ${VISUALWORKS}
    ;;
esac

### Allegro lisp
case $LOCATION in
  htc)
       case $OSTYPE in
         linux)
                case `uname -m` in
                  x86_64)
                        append PATH /net/packages/allegro/acl80/linux
                        #append PATH /net/packages/allegro/acl70/linux.64
                          ;;
                  i*86)
                        #append PATH /usr/local/acl/acl62
                        append PATH /net/packages/allegro/acl80/linux
                        ;;
                esac
                ;;
         solaris2*)
                    #append PATH /net/packages/allegro/acl62
                    append PATH /net/packages/allegro/acl80/solaris
                    ;;
       esac
       ;;
  home)
        case $OSTYPE in
          linux)
                 append PATH /usr/local/acl70
                 ;;
        esac
        ;;
esac

### OpenPBS
case $OSTYPE in
  linux)
         append PATH /opt/pbs/bin
         ;;
esac

### Clearcase
case $OSTYPE in
  linux)
         case $LOCATION in
           htc)
                append PATH /usr/local/clearcase
                ;;
         esac
         ;;
esac

### bzip
case $OSTYPE in
  solaris2*)
             append PATH /net/packages/bzip2/1.0.3/install/sparc-sun-solaris2.6/bin
             ;;
esac

### HOME
prepend PATH "${HOME}/bin"
prepend PATH "${HOME}/bin/$OSTYPE"

if [ $OSTYPE = "cygwin" ]; then
  #echo "path is $PATH"
  WPATH=`cygpath -p -w "$PATH"`
  export PATH=`cygpath -p -u "$WPATH"`
fi
