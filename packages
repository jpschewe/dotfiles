# Hey EMACS, this should be in -*- shell-script -*- mode
# FILE		.paths
# OVERVIEW	setup bash/sh paths (PATH,MANPATH)
#

#
# Null out variables to be set, and export them.
if [ -n "${PATH}" ]; then
    PATH= ; export PATH
fi
if [ -n "${LD_LIBRARY_PATH}" ]; then
    LD_LIBRARY_PATH= ; export LD_LIBRARY_PATH
fi
#DYLD_LIBRARY_PATH= ; export DYLD_LIBRARY_PATH
#DYLD_FRAMEWORK_PATH= ; export DYLD_FRAMEWORK_PATH
LM_LICENSE_FILE= ; export LM_LICENSE_FILE
CLASSPATH= ; export CLASSPATH

### "Standard" OS PATH
append PATH 		/usr/bin

#append LD_LIBRARY_PATH	/usr/lib
append PATH /bin

### Backwards compatible
append PATH /usr/local/bin
append PATH /usr/local/sbin
append PATH /sbin
append PATH /usr/sbin

# MacPorts and some other things
# 1/25/2011 prepending because want MacPort's svn
prepend PATH /opt/local/bin
prepend PATH /opt/local/sbin

# standard Linux
append PATH /opt/kde3/bin
append PATH /opt/gnome/bin
append PATH /usr/games

# pkgsrc
append PATH /usr/pkg/bin
append PATH /usr/pkg/sbin

### Standard OS Networking
case $OSTYPE in
  solaris2*) append PATH /usr/sbin
	    append PATH /usr/dt/bin
	    append PATH /opt/SUNWdtpcv/bin
	    #append LD_LIBRARY_PATH /opt/SUNWdtpcv/lib
	    ;;
  *)        append PATH /usr/etc;;
esac

case $OSTYPE in
  sunos4 | solaris2*) append PATH /etc;;
esac

### BSD Compatability
case $OSTYPE in
  sunos4 | solaris2*) prepend PATH /usr/ucb;;
esac

#-----------------------------------------------------------------------------
### X Windows
case $OSTYPE in
  sunos4) X11HOME=/usr/local/X11R5 
          append PATH	${X11HOME}/local
          ;;
  cygwin) X11HOME=/usr/X11R6 
          append PATH ${X11HOME}/bin
          ;;
  linux*) X11HOME=/usr/X11R6;;
  darwin*) X11HOME=/usr/X11;;
  netbsd*) X11HOME=/usr/X11R7;;
esac

if [ \! $OSTYPE = "cygwin" ]; then
  append PATH 		${X11HOME}/bin
  #append LD_LIBRARY_PATH	${X11HOME}/lib
  export X11INC_DIR=${X11HOME}/include
  export X11LIB_DIR=${X11HOME}/lib
fi

### OS Native X/OpenWindows
case $OSTYPE in
  hpux9 | hpux10)    append PATH /usr/bin/X11;;
  irix5 | irix6)     append PATH /usr/bin/X11;;
  sunos4 | solaris2*) export OPENWINHOME=/usr/openwin
		     append PATH 		${OPENWINHOME}/bin
		     #append LD_LIBRARY_PATH	${OPENWINHOME}/lib
		     #append HELPPATH		${OPENWINHOME}/lib/help
		     ##export HELPPATH
		     ;;
esac 

#-----------------------------------------------------------------------------

# Standard OS Compiler
case $OSTYPE in
  solaris2*)
             prepend PATH /usr/ccs/bin
             ;;
esac 

### netcat
case $OSTYPE in
  cygwin) append PATH /cygdrive/c/packages/netcat
esac

### cvs
CVSIGNORE=".cvsignore"
CVS_RSH="ssh"
export CVSIGNORE CVS_RSH

### subversion
case $OSTYPE in
  cygwin)
    append PATH /usr/lib/subversion/bin
    ;;
esac

# SVN stuff
svn() {
  case "$1" in
    pp|propprint)
      shift; svn_propprint "$@" ;;
    pa|propadd)
      shift; svn_propadd "$@" ;;
    url)
      shift; svn_field URL "$@" ;;
    root)
      shift; svn_field "Repository Root" "$@" ;;
    field)
      shift; svn_field "$@" ;;
    *)
      #(unset svn; svn "$@")
      env svn "$@" ;;
  esac
}
svn_field() {
  FIELD="$1"; shift
  svn info "$@" | egrep "^$FIELD:" | sed "s/^$FIELD: //"
}
svn_propprint() {
  svn proplist -v "$@"
#  svn proplist $@ | egrep '^ +' \
#    | xargs -I {} bash -c "echo '{} == '; svn propget {} $@ | sed 's/^/ /'"
}
svn_propadd() {
  # propset PROPNAME PROPVAL PATH...
  PROPNAME="$1"; shift
  PROPVALUE="$1"; shift
  svn propset "${PROPNAME}" "`svn propget \"${PROPNAME}\" \"$@\"` ${PROPVALUE}" "$@"
}


# make sure XEmacs generates an error log
#xemacs () {
#  if [ ! -d ~/.xemacs ]; then
#    mkdir -p ~/.xemacs
#  fi
#  
#  if [ x"$DISPLAY" != x"" ]; then
#    if [ -e ~/.xemacs/${HOST}-errors ]; then
#      mv -f ~/.xemacs/${HOST}-errors ~/.xemacs/${HOST}-errors.old
#    fi
#    command xemacs $* > ~/.xemacs/${HOST}-errors 2>&1
#  else
#    command xemacs $*
#  fi
#}


### java
unset JAVA_HOME
case $OSTYPE in
  cygwin)
          if [ -z "${JAVA_HOME}" ]; then
            for java_dir in \
             "c:/packages/jdk1.5.0_09" \
             "c:/packages/jdk1.5.0_01" \
             "c:/packages/jdk-1.5.0_06" \
             "c:/packages/jdk-1.4.1_01" \
             "d:/packages/Sun-JDK-1.3.1"
            do
              if [ -z "${JAVA_HOME}" -a -e ${java_dir} ]; then
                JAVA_HOME=${java_dir}
              fi
            done
          fi
          if [ -n "${JAVA_HOME}" -a -e "${JAVA_HOME}" ]; then
            UJAVA_HOME="`cygpath -u ${JAVA_HOME}`"
            append PATH "${UJAVA_HOME}/bin"
            append PATH "${UJAVA_HOME}/jre/bin"
          fi
          ;;
  
  linux | linux-gnu)
      if [ -z "$(command -v java)" ]; then
          # need to find java, javac, etc.
          if [ -x /usr/bin/update-alternatives ]; then
              ua=/usr/bin/update-alternatives
          elif [ -x /usr/sbin/update-alternatives ]; then
              ua=/usr/sbin/update-alternatives
          fi
          
          if [ -n "${ua}" ]; then
              ${ua} --help | grep query > /dev/null
              if [ ${?} -ne 0 ]; then
                  arg="--display"
                  best="best"
              else
                  arg="--query"
                  best="Best"
              fi
              java=`${ua} ${arg} javac 2> /dev/null | grep ${best} | awk '{print $NF}'`
              if [ -n "${java}" ]; then
                  javadir=`dirname ${java}`/..
                  JAVA_HOME=`cd ${javadir} && pwd`
              fi
          fi
          
          if [ -z "${JAVA_HOME}" ]; then
              for java_dir in \
                  /opt/jdk1.5.0_07 \
                      /usr/java/jdk1.5.0_01 \
                      /usr/java/jdk1.5.0 \
                      /usr/java/j2sdk1.4.2_04 \
                      /usr/lib64/jvm/java \
                      /usr/lib/jvm/java \
                      /usr/lib/java
              do
                  if [ -z "${JAVA_HOME}" -a -e ${java_dir} ]; then
                      JAVA_HOME=${java_dir}
                  fi
              done
          fi
          if [ -n "${JAVA_HOME}" -a -e "${JAVA_HOME}" ]; then
              prepend PATH "${JAVA_HOME}/bin"
          fi
      fi # need to find java
  ;;
  
  darwin*)
        JAVA_HOME=$(/usr/libexec/java_home)
        for java_dir in \
            /Library/Java/JavaVirtualMachines/jdk1.7.0_25.jdk/Contents/Home \
            /System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home \
            /System/Library/Frameworks/JavaVM.framework/Versions/1.5/Home \
            /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home \
            /System/Library/Frameworks/JavaVM.framework/Versions/Current/Home
        do
            if [ -z "${JAVA_HOME}" -a -e "${java_dir}" ]; then
                JAVA_HOME="${java_dir}"
            fi
        done
        if [ -n "${JAVA_HOME}" -a -e "${JAVA_HOME}" ]; then
            prepend PATH "${JAVA_HOME}/bin"
        fi
esac
export JAVA_HOME
JDK_HOME=${JAVA_HOME}
export JDK_HOME

### Maven
if [ -d /usr/share/java/maven ]; then
  M2_HOME=/usr/share/java/maven
  export M2_HOME
fi

### unzip & Motif
#case $OSTYPE in
   #solaris2*) append LD_LIBRARY_PATH /usr/dt/lib;;
#esac

### ant
case $OSTYPE in
  cygwin)
          if [ -e c:/packages/ant ]; then
            ANT_HOME=c:/packages/ant
            U_ANT_HOME=`cygpath "${ANT_HOME}"`
          fi
          ;;
  linux*)
         NEWEST_ANT=""
	 if [ -e /usr/local/ant ]; then
	   # find the most recently added version
	   NEWEST_ANT=`ls -t /usr/local/ant | head -1`
	 fi
	 if [ -n "${NEWEST_ANT}" ]; then
	   ANT_HOME=/usr/local/ant/${NEWEST_ANT}
         elif [ -e /usr/share/ant ]; then
           ANT_HOME=/usr/share/ant
         elif [ -e /opt/jakarta/ant ]; then
           ANT_HOME=/opt/jakarta/ant
         fi
         U_ANT_HOME=${ANT_HOME}
         ;;
esac
if [ -n "${ANT_HOME}" ]; then
  export ANT_HOME
  prepend PATH ${U_ANT_HOME}/bin
fi

# Microsoft VisualStudio C/C++
#case $OSTYPE in
#  cygwin)
#          append PATH "c:/Program Files/Microsoft Visual Studio/VC98/Bin"
#          append PATH "c:/Program Files/Microsoft Visual Studio/VC98/Lib"
#          append PATH "c:/Program Files/Microsoft Visual Studio/Common/MSDev98/Bin"
#          export LIB=`cygpath -w "/ProgramFiles/Microsoft Visual Studio/VC98/Lib"`
#          export INCLUDE=`cygpath -w "/ProgramFiles/Microsoft Visual Studio/VC98/Include"`
#          ;;
#esac

## ipso
#case $OSTYPE in
#  cygwin)
#          append PATH "/cygdrive/h/projects/IPSO/Active-R1/com/honeywell/goalsetter/bpc"
#          append PATH "/cygdrive/h/projects/IPSO/Active-R1/com/honeywell/goalsetter/util/database"
#          append PATH "/cygdrive/h/projects/IPSO/Active-R1/com/honeywell/goalsetter/bpc/bpc_ellipsoid"
#          ;;
#esac

#enscript
case $OSTYPE in
  cygwin)
          append PATH "/cygdrive/c/packages/enscript"
          ;;
esac

#jad
case $OSTYPE in
  cygwin)
          append PATH "/cygdrive/c/Installs/jad"
          ;;
esac

# winnt system stuff
case $OSTYPE in
  cygwin)
          append PATH "/cygdrive/c/WINDOWS/system32"
          append PATH "/cygdrive/c/WINDOWS"
          append PATH "/cygdrive/c/packages/putty"
          append PATH "/cygdrive/c/Program Files/Resource Kit"
          ;;
esac

### mysql
case $OSTYPE in
  cygwin) append PATH /cygdrive/c/packages/mysql/bin
          ;;
#  darwin*) append PATH /usr/local/mysql/bin
#           ;;
esac

# mac mysql
if [ -e /opt/local/bin/mysqld_safe5 ]; then
  alias mysql_start='echo "Enter sudo password, then put in background" && sudo /opt/local/bin/mysqld_safe5 '
  alias mysql_stop='echo "enter mysql root password" && /opt/local/bin/mysqladmin5 -u root -p shutdown'
fi



### gimp
case $OSTYPE in
  cygwin)
          append PATH /cygdrive/c/packages/gimp/bin
          ;;
esac

### subversion
case $OSTYPE in
  cygwin)
          append PATH /usr/lib/subversion/bin
          ;;
esac

### VisualWorks 7.2
case $OSTYPE in
  linux*)
    if [ -e /usr/local/vw7.1nc ]; then
      export VISUALWORKS=/usr/local/vw7.1nc
      append PATH ${VISUALWORKS}
    fi
    ;;
esac

### OpenPBS
case $OSTYPE in
  linux*)
         append PATH /opt/pbs/bin
         ;;
esac

### Oracle XE
#ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/
#export ORACLE_HOME
#append PATH ${ORACLE_HOME}/bin

### oracle
if [ -e /usr/local/bin/oraenv ]; then
  export ORACLE_SID=gate
  export ORAENV_ASK=NO
  . /usr/local/bin/oraenv
  append PATH ${ORACLE_HOME}/bin
  alias start_oracle="lsnrctl start; emctl start dbconsole; isqlplusctl start"
  alias stop_oracle="lsnrctl stop; emctl stop dbconsole; isqlplusctl stop"
fi

### Unison
# tell unison to just use the name of a machine
short_name=`hostname -s > /dev/null 2>&1`
if [ $? -ne 0 ]; then
    UNISONLOCALHOSTNAME=HOSTNAME
else
    UNISONLOCALHOSTNAME=short_name
fi
export UNISONLOCALHOSTNAME

### SBCL
if [ -e ${HOME}/sbcl ]; then
  SBCL_HOME=${HOME}/sbcl/lib/sbcl
  export SBCL_HOME
  append PATH ${HOME}/sbcl/bin
  alias sbcl='sbcl --dynamic-space-size 2000'
fi

### Allegro
#append PATH /opt/acl80
if [ -e /opt/acl81 ]; then
  ACL_HOME=/opt/acl81
elif [ -e /Applications/AllegroCL ]; then
  ACL_HOME=/Applications/AllegroCL
elif [ -e ${HOME}/Documents/Applications/AllegroCL ]; then
  ACL_HOME=${HOME}/Documents/Applications/AllegroCL
fi
if [ -n "${ACL_HOME}" ]; then
  export ACL_HOME
  append PATH ${ACL_HOME}
fi

### SBCL
if [ -e ${HOME}/sbcl ]; then
  SBCL_HOME=${HOME}/sbcl/lib/sbcl
  export SBCL_HOME
  append PATH ${HOME}/sbcl/bin
  alias sbcl='sbcl --dynamic-space-size 2000'
fi

# mac postgres
if [ -e /opt/local/lib/postgresql84 ]; then
  PG_BIN=/opt/local/lib/postgresql84/bin
  PGDATA=/opt/local/var/db/postgresql84/defaultdb
elif [ -e /opt/local/lib/postgresql90 ]; then
  PG_BIN=/opt/local/lib/postgresql90/bin
  PGDATA=/opt/local/var/db/postgresql90/defaultdb
fi
if [ -e ${PG_BIN} ]; then
    alias postgres_start='echo "Need password for sudo"; pushd /tmp && sudo su postgres -c "${PG_BIN}/pg_ctl -D ${PGDATA} start";popd'
    alias postgres_stop='echo "Need password for sudo"; pushd /tmp && sudo su postgres -c "cd /tmp && ${PG_BIN}/pg_ctl -D ${PGDATA} stop"; popd'
    append PATH ${PG_BIN}
fi

# google protocol buffers
if [ -e "${HOME}/protobuf" ]; then
    PROTOBUF_HOME=${HOME}/protobuf
    export PROTOBUF_HOME
fi

append PATH ${HOME}/Documents/Applications/Octave.app/Contents/Resources/bin
append PATH /Applications/Octave.app/Contents/Resources/bin

### Qt
QT_DIR=""
# favorite is listed last
for qt_dir in \
    ${HOME}/Qt5.1.1/5.1.1/clang_64 \
    /usr/local/Qt5.1.1/5.1.1/gcc_64 \
    ${HOME}/QtSDK/Desktop/Qt/4.8.0/gcc \
    /usr/local/qt-4.8.0/Desktop/Qt/4.8.0/gcc \
    /usr/local/qt-4.8.4
do
    if [ -e "${qt_dir}" ]; then
        QT_DIR=${qt_dir}
    fi
done
if [ -n "${QT_DIR}" ]; then
    append PATH "${QT_DIR}/bin"
    append LD_LIBRARY_PATH "${QT_DIR}/lib"
    append DYLD_LIBRARY_PATH "${QT_DIR}/lib"
    append DYLD_FRAMEWORK_PATH "${QT_DIR}/lib"
fi

### ditz
append PATH ${HOME}/src/ditz/bin
if [ -e ${HOME}/src/ditz/contrib/completion/ditz.bash ]; then
  . ${HOME}/src/ditz/contrib/completion/ditz.bash
fi

### gnuplot
#append PATH /Applications/Gnuplot.app/Contents/Resources/bin

### octave
append PATH /Applications/Octave.app/Contents/Resources/bin

### go
append PATH /usr/local/go/bin
export GOPATH="${HOME}"/.gocode
append PATH "${GOPATH}"/bin

### brew
prepend PATH /usr/local/brew/sbin
prepend PATH /usr/local/brew/bin

### MacTex
append PATH /Library/TeX/texbin

### npm
prepend PATH "${HOME}"/npm-global/bin

### HOME
prepend PATH "${HOME}/bin"
prepend PATH "${HOME}/bin/$OSTYPE"

if [ $OSTYPE = "cygwin" ]; then
  #echo "path is $PATH"
  WPATH=`cygpath -p -w "$PATH"`
  export PATH=`cygpath -p -u "$WPATH"`
fi
